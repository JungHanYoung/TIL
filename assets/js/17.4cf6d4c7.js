(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{201:function(t,a,s){t.exports=s.p+"assets/img/git-flow_overall_graph.f3ecc3cf.png"},228:function(t,a,s){"use strict";s.r(a);var e=[function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("div",{staticClass:"content"},[e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#브랜치-전략-git-flow-github-flow"}},[t._v("브랜치 전략(git flow, github flow)")]),e("ul",[e("li",[e("a",{attrs:{href:"#git-flow"}},[t._v("git flow")])]),e("li",[e("a",{attrs:{href:"#github-flow"}},[t._v("github flow")])])])]),e("li",[e("a",{attrs:{href:"#내-서비스를-github-action-을-통해-heorku-에-자동-배포해보기"}},[t._v("내 서비스를 Github Action 을 통해 Heorku 에 자동 배포해보기")]),e("ul",[e("li",[e("a",{attrs:{href:"#heroku-란"}},[t._v("Heroku 란?")])]),e("li",[e("a",{attrs:{href:"#heroku-배포방법"}},[t._v("Heroku 배포방법")])]),e("li",[e("a",{attrs:{href:"#github-action-을-사용하는-이유"}},[t._v("Github Action 을 사용하는 이유")])]),e("li",[e("a",{attrs:{href:"#spring-boot-앱-자동-배포-시작"}},[t._v("Spring Boot 앱 자동 배포 시작")]),e("ul",[e("li",[e("a",{attrs:{href:"#heroku-api-키-보안"}},[t._v("Heroku API 키 보안")])])])])])])])]),e("p"),t._v(" "),e("h2",{attrs:{id:"브랜치-전략-git-flow-github-flow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#브랜치-전략-git-flow-github-flow","aria-hidden":"true"}},[t._v("#")]),t._v(" 브랜치 전략(git flow, github flow)")]),t._v(" "),e("h3",{attrs:{id:"git-flow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-flow","aria-hidden":"true"}},[t._v("#")]),t._v(" git flow")]),t._v(" "),e("p",[t._v("근간이 되는 브랜치는 master, develop 브랜치")]),t._v(" "),e("p",[t._v("새로운 기능을 추가하는 브랜치로 feature/... 가 develop 브랜치에서 뻗어간다. 기능 구현이 완료되면 다시 develop 브랜치로 merge 하게된다.")]),t._v(" "),e("p",[t._v("서비스 출시전 release 브랜치를 만들고 모든 구성원이 QA 를 할 수 있도록 한다. release 브랜치는 QA 동안 발견된 버그를 수정하며 출시 준비가 완료되면 master 브랜치로 merge 하며 출시를 완료하게 된다.")]),t._v(" "),e("p",[t._v("서비스 출시 후 버그가 발생하면 hotfixes 브랜치를 만들고 버그 수정을 한다. 수정이 완료되면 출시된 master 브랜치로 merge 한다.")]),t._v(" "),e("p",[e("img",{attrs:{src:s(201),alt:"git flow graph"}})]),t._v(" "),e("h3",{attrs:{id:"github-flow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#github-flow","aria-hidden":"true"}},[t._v("#")]),t._v(" github flow")]),t._v(" "),e("p",[t._v("github flow 는 기능 개발을 위한 브랜치를 만들고 이를 리모트 저장소에 푸쉬하여 Pull Request 를 하는 전략이다. 이는 메인 브랜치(master)에 merge 하기 전 pull request 를 통해 구성원들의 리뷰를 받고 최종결정자가 merge 를 한다.")]),t._v(" "),e("h2",{attrs:{id:"내-서비스를-github-action-을-통해-heorku-에-자동-배포해보기"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#내-서비스를-github-action-을-통해-heorku-에-자동-배포해보기","aria-hidden":"true"}},[t._v("#")]),t._v(" 내 서비스를 Github Action 을 통해 Heorku 에 자동 배포해보기")]),t._v(" "),e("h3",{attrs:{id:"heroku-란"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#heroku-란","aria-hidden":"true"}},[t._v("#")]),t._v(" Heroku 란?")]),t._v(" "),e("p",[t._v("Heroku 는 배포 준비된 웹 어플리케이션을 올릴 수 있는 플랫폼")]),t._v(" "),e("h3",{attrs:{id:"heroku-배포방법"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#heroku-배포방법","aria-hidden":"true"}},[t._v("#")]),t._v(" Heroku 배포방법")]),t._v(" "),e("ul",[e("li",[t._v("Heroku 앱이 만들어지면 Github 와 같은 리모트 저장소가 생성")]),t._v(" "),e("li",[t._v("해당 리모트 저장소에 프로젝트를 푸쉬하게되면 준비된 커맨드를 실행해 배포를 진행")])]),t._v(" "),e("p",[t._v("개인프로젝트 진행시에는 리모트 저장소를 Heroku 로 하고 직접 테스트를 진행하면서 배포를 직접하는 것이 적절한 방법인 것 같다.")]),t._v(" "),e("h3",{attrs:{id:"github-action-을-사용하는-이유"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#github-action-을-사용하는-이유","aria-hidden":"true"}},[t._v("#")]),t._v(" Github Action 을 사용하는 이유")]),t._v(" "),e("p",[t._v("협업의 경우에는 얘기가 다르다. 여러 개발자가 하나의 프로젝트에 붙어 개발을 한다면 개발된 내용을 통합한 후 배포를 진행해야 할 것이다. 이것뿐만아니라 통합후 배포전 테스트를 진행하고 싶다면 바로 배포가 진행되는 Heroku 에 push 하면 안될것이다. 물론 Heroku 에는 pipeline 을 생성하여 배포 전에 다른 것을 수행할 수 있으나 비용이 추가될 수 있다.")]),t._v(" "),e("h3",{attrs:{id:"spring-boot-앱-자동-배포-시작"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot-앱-자동-배포-시작","aria-hidden":"true"}},[t._v("#")]),t._v(" Spring Boot 앱 자동 배포 시작")]),t._v(" "),e("p",[t._v("Github Action 은 .github/workflows 에 정의")]),t._v(" "),e("p",[t._v("해당 코드는 Spring Boot 앱을 gradle 을 통해 테스트-빌드 진행, 이후 heroku 에 배포하는 일련의 과정을 정의한 것.")]),t._v(" "),e("div",{staticClass:"language-yaml line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# .github/workflows/<...>.yml")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Jangpyunham Testing Demo\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("push"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("Spring-Boot-Test-And-Build")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Linux환경에서 실행")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v2 "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# repository 코드를 가져와 runner에 다운*")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Set up JDK 11\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/setup"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("java@v2 "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# jdk 다운로드")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("java-version")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'11'")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("distribution")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'adopt'")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Validate Gradle wrapper\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" gradle/wrapper"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("validation"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("action@e6e38bacfdf1a337459f332974bb2327a31aaf4b\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Testing\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./gradlew build "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 테스트 및 빌드 진행")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" akhileshns/heroku"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("deploy@v3.12.12 "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Heroku 배포")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("heroku_api_key")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("secrets.HEROKU_API_KEY"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("heroku_app_name")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(' "jangpyunham'),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v('backend" '),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Must be unique in Heroku")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("heroku_email")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"8735132@naver.com"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br")])]),e("p",[t._v("이후에는 github 저장소에 push 되면 다음의 과정을 수행하게된다.")]),t._v(" "),e("h4",{attrs:{id:"heroku-api-키-보안"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#heroku-api-키-보안","aria-hidden":"true"}},[t._v("#")]),t._v(" Heroku API 키 보안")]),t._v(" "),e("p",[t._v("heroku 에 배포하기 위해서는 API 키가 필요하게 되는데 문서에 그대로 넣게되면 협업하는 구성원들이 이를 확인하게되어 보안상 안좋다. secrets 을 통해 github action 에서 환경변수를 사용할 수 있게 하여 API 키를 확인할 수 없도록 하는게 좋을 것 같아 설정하였다.")])])}],n=s(0),r=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},e,!1,null,null,null);r.options.__file="25.md";a.default=r.exports}}]);